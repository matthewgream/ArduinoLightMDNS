
The original version was highly defective and non-compliant to RFC (in such ways as the encoding of TXT records was totally incorrect, DNS name compression being partly supported). Futhermore, it was poor implemented, being highly fragile with some very difficult to understand code.

The renovated version:

1. RFC compliant to RFC, interoperable tested (adoc against devices and tools)
2. improved service handling, employs NSEC records, supports probing, does conflict checking, answers reverse address (arpa) queries
3. removes horrific pointer and memory usage, by adopting Strings and C++ std components
4. highly modular and extensible, with remaining questionable jailed (e.g. query matching, UDP read/write)
5. adds robust error checking, data validation (class interface usage and network packet reception)
6. removes magic numbers in place of defined and configurable constants
7. is ***extensively*** instrumented at software, protocol and network levels
8. employs const correctness, references, and modern C++ containers, algorithms
9. reduced duplicative data copying and intermediate buffering

It still needs work, primarily to refactor the matching algorithm and tidy up the UDP / Name parsing. The messageRecv flow especially.

Ideally, it should moved to proper OO/C++, e.g. messageSend -> message -> records -> elements flow is pretty much ready to be converted into classes.

Originally from https://github.com/arduino-libraries/ArduinoMDNS
